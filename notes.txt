New project:
  - New GitHub repository:
    - Name: <service-name>.
    - Add .gitignore file.
  - IntelliJ:
    - New Maven project:
      - GroupId: com.grmek.rso.
      - ArtifactId: <service-name>.
      - Version: 1.0.0-SNAPSHOT.
      - Project name: <service-name>.
    - Add properties, dependencyManagement, dependencies and build section to
      the pom.xml file.
    - Add configuration:
      - New (+).
      - Application.
      - Main class: com.kumuluz.ee.EeApplication.
    - Add source files (package: com.grmek.rso.<servicename>).
  - Add Dockerfile.
  - Setup Travis CI:
    - Add .travis.yml file.
    - Add environment variables on the Travis CI's webpage (repository ->
      more options -> settings):
      - DOCKER_USERNAME.
      - DOCKER_PASSWORD.
      - GCP_KEY (get the key for the GCP service account, remove all new line
        characters, add single quotes around the resulting line).
  - Setup configuration managment:
    - Add config.yaml file to the resources.
    - Run Etcd server and add some values with the Etcd viewer.

Maven:
  - Build: "mvn clean package -U".

Docker:
  - Build: "docker build -t grmek/<service-name>:1.0.0-SNAPSHOT .".
  - Push: "docker push grmek/<service-name>:1.0.0-SNAPSHOT".
  - Pull: "docker pull grmek/<service-name>:1.0.0-SNAPSHOT".
  - Run: "docker run -d -p <port>:8080 -e <var>=<value> \
    grmek/<service-name>:1.0.0-SNAPSHOT".
  - Get ip: "docker-machine ip default".
  - Access service at: "<ip>:<port>/<api>".
  - List images: "docker images".
  - Remove image: "docker rmi <image>".
  - List containers: "docker ps".
  - Kill container: "docker kill <container>".
  - Remove container: "docker rm <container>".
  - Compose:
    - Start containers: "docker-compose up -d".
    - Stop and remove containers: "docker-compose down".

Etcd:
  - Server: "docker run -d -p 2379:2379 \
    --name etcd \
    --volume=/tmp/etcd-data:/etcd-data \
    quay.io/coreos/etcd:v3.2.28 \
    /usr/local/bin/etcd \
    --name etcd-node-0 \
    --data-dir /etcd-data \
    --listen-client-urls http://0.0.0.0:2379 \
    --advertise-client-urls http://0.0.0.0:2379 \
    --listen-peer-urls http://0.0.0.0:2380 \
    --initial-advertise-peer-urls http://0.0.0.0:2380 \
    --initial-cluster etcd-node-0=http://0.0.0.0:2380 \
    -cors="*"".
  - Viewer: "docker run -d -p 8081:8080 --name etcd-viewer \
    nikfoundas/etcd-viewer:latest".
  - Config path: "/environments/dev/services/<service-name>/1.0.0/config/...".

Kubernetes:
  - Deployment: "kubectl apply -f <file-name>".
  - Port forwarding: "kubectl port-forward <pod> <port>:<pod_port>".
    This is useful for testing Node Port services. After port forwarding, the
    pod will be available at localhost:<port>.
  - Create a secret: "kubectl create secret generic <secret-name> \
    --from-literal=<key>=<value>"

Google Cloud Platform:
  - Setup kubectl: "https://cloud.google.com/kubernetes-engine/docs/quickstart".
  - Get the key for the service account: APIs & Services -> Credentials ->
    Create credentials -> Service account key -> Compute Engine default service
    account, JSON -> Create.
  - Configuring permissions: IAM & admin -> IAM -> Change member's project role
    from Editor to Owner (member can be determined with "gcloud info" at the
    Account section).
  - Setup DB: SQL -> Create instance -> MySQL -> Instance ID: mysql-db,
    Connectivity -> Enable Private IP and disable Public IP, Create.
  - Setup Storage: Storage -> Create bucket -> Name: grmek-rso-storage-bucket,
    Region: us-central1 (lowa), Access control: Fine-grained, Encryption:
    Google-managed key, Create. Permissions -> Add members -> New members:
    allUsers, Select a role: Storage - Storage Object Viewer, Save.

Logit:
  - Setup:
    - Dashboard -> Add Source -> TCP -> Copy the Stack Endpoint and No-TLS Port
      into the MS config.yaml file.
  - Lucene query examples:
    - "marker.name: ENTRY || marker.name: EXIT".
    - "contextMap.applicationName: image-managing".
    - "marker.name: ENTRY && contextMap.method: getAllAlbums".
